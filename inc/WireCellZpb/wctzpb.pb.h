// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/wctzpb.proto

#ifndef PROTOBUF_src_2fwctzpb_2eproto__INCLUDED
#define PROTOBUF_src_2fwctzpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace wctzpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_src_2fwctzpb_2eproto();
void protobuf_AssignDesc_src_2fwctzpb_2eproto();
void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

class BinRangeList;
class ChannelMasks;
class Depo;
class DepoSet;
class FloatArray;
class Frame;
class IntArray;
class Payload;
class Point;
class Trace;

// ===================================================================

class Payload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.Payload) */ {
 public:
  Payload();
  virtual ~Payload();

  Payload(const Payload& from);

  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Payload& default_instance();

  void Swap(Payload* other);

  // implements Message ----------------------------------------------

  inline Payload* New() const { return New(NULL); }

  Payload* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Payload& from);
  void MergeFrom(const Payload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Payload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any objects = 1;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 1;
  const ::google::protobuf::Any& objects(int index) const;
  ::google::protobuf::Any* mutable_objects(int index);
  ::google::protobuf::Any* add_objects();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_objects();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      objects() const;

  // @@protoc_insertion_point(class_scope:wctzpb.Payload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > objects_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static Payload* default_instance_;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:wctzpb.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Depo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.Depo) */ {
 public:
  Depo();
  virtual ~Depo();

  Depo(const Depo& from);

  inline Depo& operator=(const Depo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Depo& default_instance();

  void Swap(Depo* other);

  // implements Message ----------------------------------------------

  inline Depo* New() const { return New(NULL); }

  Depo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Depo& from);
  void MergeFrom(const Depo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Depo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ident = 1;
  void clear_ident();
  static const int kIdentFieldNumber = 1;
  ::google::protobuf::uint64 ident() const;
  void set_ident(::google::protobuf::uint64 value);

  // optional .wctzpb.Point pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::wctzpb::Point& pos() const;
  ::wctzpb::Point* mutable_pos();
  ::wctzpb::Point* release_pos();
  void set_allocated_pos(::wctzpb::Point* pos);

  // optional double time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  double time() const;
  void set_time(double value);

  // optional double charge = 4;
  void clear_charge();
  static const int kChargeFieldNumber = 4;
  double charge() const;
  void set_charge(double value);

  // optional double energy = 5;
  void clear_energy();
  static const int kEnergyFieldNumber = 5;
  double energy() const;
  void set_energy(double value);

  // optional uint32 trackid = 6;
  void clear_trackid();
  static const int kTrackidFieldNumber = 6;
  ::google::protobuf::uint32 trackid() const;
  void set_trackid(::google::protobuf::uint32 value);

  // optional uint32 pdg = 7;
  void clear_pdg();
  static const int kPdgFieldNumber = 7;
  ::google::protobuf::uint32 pdg() const;
  void set_pdg(::google::protobuf::uint32 value);

  // optional uint64 prior = 8;
  void clear_prior();
  static const int kPriorFieldNumber = 8;
  ::google::protobuf::uint64 prior() const;
  void set_prior(::google::protobuf::uint64 value);

  // optional double extent_long = 9;
  void clear_extent_long();
  static const int kExtentLongFieldNumber = 9;
  double extent_long() const;
  void set_extent_long(double value);

  // optional double extent_tran = 10;
  void clear_extent_tran();
  static const int kExtentTranFieldNumber = 10;
  double extent_tran() const;
  void set_extent_tran(double value);

  // @@protoc_insertion_point(class_scope:wctzpb.Depo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 ident_;
  ::wctzpb::Point* pos_;
  double time_;
  double charge_;
  double energy_;
  ::google::protobuf::uint32 trackid_;
  ::google::protobuf::uint32 pdg_;
  ::google::protobuf::uint64 prior_;
  double extent_long_;
  double extent_tran_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static Depo* default_instance_;
};
// -------------------------------------------------------------------

class DepoSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.DepoSet) */ {
 public:
  DepoSet();
  virtual ~DepoSet();

  DepoSet(const DepoSet& from);

  inline DepoSet& operator=(const DepoSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepoSet& default_instance();

  void Swap(DepoSet* other);

  // implements Message ----------------------------------------------

  inline DepoSet* New() const { return New(NULL); }

  DepoSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepoSet& from);
  void MergeFrom(const DepoSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DepoSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ident = 1;
  void clear_ident();
  static const int kIdentFieldNumber = 1;
  ::google::protobuf::uint32 ident() const;
  void set_ident(::google::protobuf::uint32 value);

  // repeated .wctzpb.Depo depos = 2;
  int depos_size() const;
  void clear_depos();
  static const int kDeposFieldNumber = 2;
  const ::wctzpb::Depo& depos(int index) const;
  ::wctzpb::Depo* mutable_depos(int index);
  ::wctzpb::Depo* add_depos();
  ::google::protobuf::RepeatedPtrField< ::wctzpb::Depo >*
      mutable_depos();
  const ::google::protobuf::RepeatedPtrField< ::wctzpb::Depo >&
      depos() const;

  // @@protoc_insertion_point(class_scope:wctzpb.DepoSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::wctzpb::Depo > depos_;
  ::google::protobuf::uint32 ident_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static DepoSet* default_instance_;
};
// -------------------------------------------------------------------

class FloatArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.FloatArray) */ {
 public:
  FloatArray();
  virtual ~FloatArray();

  FloatArray(const FloatArray& from);

  inline FloatArray& operator=(const FloatArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatArray& default_instance();

  void Swap(FloatArray* other);

  // implements Message ----------------------------------------------

  inline FloatArray* New() const { return New(NULL); }

  FloatArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FloatArray& from);
  void MergeFrom(const FloatArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FloatArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  float elements(int index) const;
  void set_elements(int index, float value);
  void add_elements(float value);
  const ::google::protobuf::RepeatedField< float >&
      elements() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:wctzpb.FloatArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< float > elements_;
  mutable int _elements_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static FloatArray* default_instance_;
};
// -------------------------------------------------------------------

class IntArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.IntArray) */ {
 public:
  IntArray();
  virtual ~IntArray();

  IntArray(const IntArray& from);

  inline IntArray& operator=(const IntArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntArray& default_instance();

  void Swap(IntArray* other);

  // implements Message ----------------------------------------------

  inline IntArray* New() const { return New(NULL); }

  IntArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntArray& from);
  void MergeFrom(const IntArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  ::google::protobuf::int32 elements(int index) const;
  void set_elements(int index, ::google::protobuf::int32 value);
  void add_elements(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      elements() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:wctzpb.IntArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > elements_;
  mutable int _elements_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static IntArray* default_instance_;
};
// -------------------------------------------------------------------

class Trace : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.Trace) */ {
 public:
  Trace();
  virtual ~Trace();

  Trace(const Trace& from);

  inline Trace& operator=(const Trace& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Trace& default_instance();

  void Swap(Trace* other);

  // implements Message ----------------------------------------------

  inline Trace* New() const { return New(NULL); }

  Trace* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Trace& from);
  void MergeFrom(const Trace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Trace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 tbin = 2;
  void clear_tbin();
  static const int kTbinFieldNumber = 2;
  ::google::protobuf::int32 tbin() const;
  void set_tbin(::google::protobuf::int32 value);

  // optional .wctzpb.FloatArray samples = 3;
  bool has_samples() const;
  void clear_samples();
  static const int kSamplesFieldNumber = 3;
  const ::wctzpb::FloatArray& samples() const;
  ::wctzpb::FloatArray* mutable_samples();
  ::wctzpb::FloatArray* release_samples();
  void set_allocated_samples(::wctzpb::FloatArray* samples);

  // @@protoc_insertion_point(class_scope:wctzpb.Trace)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 tbin_;
  ::wctzpb::FloatArray* samples_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static Trace* default_instance_;
};
// -------------------------------------------------------------------

class BinRangeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.BinRangeList) */ {
 public:
  BinRangeList();
  virtual ~BinRangeList();

  BinRangeList(const BinRangeList& from);

  inline BinRangeList& operator=(const BinRangeList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinRangeList& default_instance();

  void Swap(BinRangeList* other);

  // implements Message ----------------------------------------------

  inline BinRangeList* New() const { return New(NULL); }

  BinRangeList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinRangeList& from);
  void MergeFrom(const BinRangeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BinRangeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 beg = 1;
  int beg_size() const;
  void clear_beg();
  static const int kBegFieldNumber = 1;
  ::google::protobuf::int32 beg(int index) const;
  void set_beg(int index, ::google::protobuf::int32 value);
  void add_beg(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      beg() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_beg();

  // repeated int32 end = 2;
  int end_size() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int32 end(int index) const;
  void set_end(int index, ::google::protobuf::int32 value);
  void add_end(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      end() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_end();

  // @@protoc_insertion_point(class_scope:wctzpb.BinRangeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > beg_;
  mutable int _beg_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > end_;
  mutable int _end_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static BinRangeList* default_instance_;
};
// -------------------------------------------------------------------

class ChannelMasks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.ChannelMasks) */ {
 public:
  ChannelMasks();
  virtual ~ChannelMasks();

  ChannelMasks(const ChannelMasks& from);

  inline ChannelMasks& operator=(const ChannelMasks& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMasks& default_instance();

  void Swap(ChannelMasks* other);

  // implements Message ----------------------------------------------

  inline ChannelMasks* New() const { return New(NULL); }

  ChannelMasks* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelMasks& from);
  void MergeFrom(const ChannelMasks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChannelMasks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .wctzpb.BinRangeList> bin_range_lists = 1;
  int bin_range_lists_size() const;
  void clear_bin_range_lists();
  static const int kBinRangeListsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::wctzpb::BinRangeList >&
      bin_range_lists() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::wctzpb::BinRangeList >*
      mutable_bin_range_lists();

  // @@protoc_insertion_point(class_scope:wctzpb.ChannelMasks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::wctzpb::BinRangeList,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ChannelMasks_BinRangeListsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::wctzpb::BinRangeList,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bin_range_lists_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static ChannelMasks* default_instance_;
};
// -------------------------------------------------------------------

class Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wctzpb.Frame) */ {
 public:
  Frame();
  virtual ~Frame();

  Frame(const Frame& from);

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Frame& default_instance();

  void Swap(Frame* other);

  // implements Message ----------------------------------------------

  inline Frame* New() const { return New(NULL); }

  Frame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Frame& from);
  void MergeFrom(const Frame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int32 ident = 1;
  void clear_ident();
  static const int kIdentFieldNumber = 1;
  ::google::protobuf::int32 ident() const;
  void set_ident(::google::protobuf::int32 value);

  // optional double time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  double time() const;
  void set_time(double value);

  // optional double tick = 3;
  void clear_tick();
  static const int kTickFieldNumber = 3;
  double tick() const;
  void set_tick(double value);

  // repeated .wctzpb.Trace traces = 4;
  int traces_size() const;
  void clear_traces();
  static const int kTracesFieldNumber = 4;
  const ::wctzpb::Trace& traces(int index) const;
  ::wctzpb::Trace* mutable_traces(int index);
  ::wctzpb::Trace* add_traces();
  ::google::protobuf::RepeatedPtrField< ::wctzpb::Trace >*
      mutable_traces();
  const ::google::protobuf::RepeatedPtrField< ::wctzpb::Trace >&
      traces() const;

  // repeated string frame_tags = 5;
  int frame_tags_size() const;
  void clear_frame_tags();
  static const int kFrameTagsFieldNumber = 5;
  const ::std::string& frame_tags(int index) const;
  ::std::string* mutable_frame_tags(int index);
  void set_frame_tags(int index, const ::std::string& value);
  void set_frame_tags(int index, const char* value);
  void set_frame_tags(int index, const char* value, size_t size);
  ::std::string* add_frame_tags();
  void add_frame_tags(const ::std::string& value);
  void add_frame_tags(const char* value);
  void add_frame_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& frame_tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_frame_tags();

  // map<string, .wctzpb.IntArray> tagged_traces = 6;
  int tagged_traces_size() const;
  void clear_tagged_traces();
  static const int kTaggedTracesFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::wctzpb::IntArray >&
      tagged_traces() const;
  ::google::protobuf::Map< ::std::string, ::wctzpb::IntArray >*
      mutable_tagged_traces();

  // map<string, .wctzpb.FloatArray> trace_summaries = 7;
  int trace_summaries_size() const;
  void clear_trace_summaries();
  static const int kTraceSummariesFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::wctzpb::FloatArray >&
      trace_summaries() const;
  ::google::protobuf::Map< ::std::string, ::wctzpb::FloatArray >*
      mutable_trace_summaries();

  // map<string, .wctzpb.ChannelMasks> channel_masks = 8;
  int channel_masks_size() const;
  void clear_channel_masks();
  static const int kChannelMasksFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::wctzpb::ChannelMasks >&
      channel_masks() const;
  ::google::protobuf::Map< ::std::string, ::wctzpb::ChannelMasks >*
      mutable_channel_masks();

  // @@protoc_insertion_point(class_scope:wctzpb.Frame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double time_;
  double tick_;
  ::google::protobuf::RepeatedPtrField< ::wctzpb::Trace > traces_;
  ::google::protobuf::RepeatedPtrField< ::std::string> frame_tags_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::wctzpb::IntArray,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Frame_TaggedTracesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::wctzpb::IntArray,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > tagged_traces_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::wctzpb::FloatArray,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Frame_TraceSummariesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::wctzpb::FloatArray,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > trace_summaries_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::wctzpb::ChannelMasks,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Frame_ChannelMasksEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::wctzpb::ChannelMasks,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > channel_masks_;
  ::google::protobuf::int32 ident_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_src_2fwctzpb_2eproto();
  friend void protobuf_AssignDesc_src_2fwctzpb_2eproto();
  friend void protobuf_ShutdownFile_src_2fwctzpb_2eproto();

  void InitAsDefaultInstance();
  static Frame* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Payload

// repeated .google.protobuf.Any objects = 1;
inline int Payload::objects_size() const {
  return objects_.size();
}
inline void Payload::clear_objects() {
  objects_.Clear();
}
inline const ::google::protobuf::Any& Payload::objects(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.Payload.objects)
  return objects_.Get(index);
}
inline ::google::protobuf::Any* Payload::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:wctzpb.Payload.objects)
  return objects_.Mutable(index);
}
inline ::google::protobuf::Any* Payload::add_objects() {
  // @@protoc_insertion_point(field_add:wctzpb.Payload.objects)
  return objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
Payload::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.Payload.objects)
  return &objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
Payload::objects() const {
  // @@protoc_insertion_point(field_list:wctzpb.Payload.objects)
  return objects_;
}

// -------------------------------------------------------------------

// Point

// optional float x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline float Point::x() const {
  // @@protoc_insertion_point(field_get:wctzpb.Point.x)
  return x_;
}
inline void Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Point.x)
}

// optional float y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline float Point::y() const {
  // @@protoc_insertion_point(field_get:wctzpb.Point.y)
  return y_;
}
inline void Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Point.y)
}

// optional float z = 3;
inline void Point::clear_z() {
  z_ = 0;
}
inline float Point::z() const {
  // @@protoc_insertion_point(field_get:wctzpb.Point.z)
  return z_;
}
inline void Point::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Point.z)
}

// -------------------------------------------------------------------

// Depo

// optional uint64 ident = 1;
inline void Depo::clear_ident() {
  ident_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Depo::ident() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.ident)
  return ident_;
}
inline void Depo::set_ident(::google::protobuf::uint64 value) {
  
  ident_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.ident)
}

// optional .wctzpb.Point pos = 2;
inline bool Depo::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
inline void Depo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::wctzpb::Point& Depo::pos() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::wctzpb::Point* Depo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::wctzpb::Point;
  }
  // @@protoc_insertion_point(field_mutable:wctzpb.Depo.pos)
  return pos_;
}
inline ::wctzpb::Point* Depo::release_pos() {
  // @@protoc_insertion_point(field_release:wctzpb.Depo.pos)
  
  ::wctzpb::Point* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void Depo::set_allocated_pos(::wctzpb::Point* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:wctzpb.Depo.pos)
}

// optional double time = 3;
inline void Depo::clear_time() {
  time_ = 0;
}
inline double Depo::time() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.time)
  return time_;
}
inline void Depo::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.time)
}

// optional double charge = 4;
inline void Depo::clear_charge() {
  charge_ = 0;
}
inline double Depo::charge() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.charge)
  return charge_;
}
inline void Depo::set_charge(double value) {
  
  charge_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.charge)
}

// optional double energy = 5;
inline void Depo::clear_energy() {
  energy_ = 0;
}
inline double Depo::energy() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.energy)
  return energy_;
}
inline void Depo::set_energy(double value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.energy)
}

// optional uint32 trackid = 6;
inline void Depo::clear_trackid() {
  trackid_ = 0u;
}
inline ::google::protobuf::uint32 Depo::trackid() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.trackid)
  return trackid_;
}
inline void Depo::set_trackid(::google::protobuf::uint32 value) {
  
  trackid_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.trackid)
}

// optional uint32 pdg = 7;
inline void Depo::clear_pdg() {
  pdg_ = 0u;
}
inline ::google::protobuf::uint32 Depo::pdg() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.pdg)
  return pdg_;
}
inline void Depo::set_pdg(::google::protobuf::uint32 value) {
  
  pdg_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.pdg)
}

// optional uint64 prior = 8;
inline void Depo::clear_prior() {
  prior_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Depo::prior() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.prior)
  return prior_;
}
inline void Depo::set_prior(::google::protobuf::uint64 value) {
  
  prior_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.prior)
}

// optional double extent_long = 9;
inline void Depo::clear_extent_long() {
  extent_long_ = 0;
}
inline double Depo::extent_long() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.extent_long)
  return extent_long_;
}
inline void Depo::set_extent_long(double value) {
  
  extent_long_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.extent_long)
}

// optional double extent_tran = 10;
inline void Depo::clear_extent_tran() {
  extent_tran_ = 0;
}
inline double Depo::extent_tran() const {
  // @@protoc_insertion_point(field_get:wctzpb.Depo.extent_tran)
  return extent_tran_;
}
inline void Depo::set_extent_tran(double value) {
  
  extent_tran_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Depo.extent_tran)
}

// -------------------------------------------------------------------

// DepoSet

// optional uint32 ident = 1;
inline void DepoSet::clear_ident() {
  ident_ = 0u;
}
inline ::google::protobuf::uint32 DepoSet::ident() const {
  // @@protoc_insertion_point(field_get:wctzpb.DepoSet.ident)
  return ident_;
}
inline void DepoSet::set_ident(::google::protobuf::uint32 value) {
  
  ident_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.DepoSet.ident)
}

// repeated .wctzpb.Depo depos = 2;
inline int DepoSet::depos_size() const {
  return depos_.size();
}
inline void DepoSet::clear_depos() {
  depos_.Clear();
}
inline const ::wctzpb::Depo& DepoSet::depos(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.DepoSet.depos)
  return depos_.Get(index);
}
inline ::wctzpb::Depo* DepoSet::mutable_depos(int index) {
  // @@protoc_insertion_point(field_mutable:wctzpb.DepoSet.depos)
  return depos_.Mutable(index);
}
inline ::wctzpb::Depo* DepoSet::add_depos() {
  // @@protoc_insertion_point(field_add:wctzpb.DepoSet.depos)
  return depos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::wctzpb::Depo >*
DepoSet::mutable_depos() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.DepoSet.depos)
  return &depos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::wctzpb::Depo >&
DepoSet::depos() const {
  // @@protoc_insertion_point(field_list:wctzpb.DepoSet.depos)
  return depos_;
}

// -------------------------------------------------------------------

// FloatArray

// repeated float elements = 1;
inline int FloatArray::elements_size() const {
  return elements_.size();
}
inline void FloatArray::clear_elements() {
  elements_.Clear();
}
inline float FloatArray::elements(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.FloatArray.elements)
  return elements_.Get(index);
}
inline void FloatArray::set_elements(int index, float value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:wctzpb.FloatArray.elements)
}
inline void FloatArray::add_elements(float value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:wctzpb.FloatArray.elements)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatArray::elements() const {
  // @@protoc_insertion_point(field_list:wctzpb.FloatArray.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatArray::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.FloatArray.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// IntArray

// repeated int32 elements = 1;
inline int IntArray::elements_size() const {
  return elements_.size();
}
inline void IntArray::clear_elements() {
  elements_.Clear();
}
inline ::google::protobuf::int32 IntArray::elements(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.IntArray.elements)
  return elements_.Get(index);
}
inline void IntArray::set_elements(int index, ::google::protobuf::int32 value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:wctzpb.IntArray.elements)
}
inline void IntArray::add_elements(::google::protobuf::int32 value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:wctzpb.IntArray.elements)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntArray::elements() const {
  // @@protoc_insertion_point(field_list:wctzpb.IntArray.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntArray::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.IntArray.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// Trace

// optional int32 channel = 1;
inline void Trace::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 Trace::channel() const {
  // @@protoc_insertion_point(field_get:wctzpb.Trace.channel)
  return channel_;
}
inline void Trace::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Trace.channel)
}

// optional int32 tbin = 2;
inline void Trace::clear_tbin() {
  tbin_ = 0;
}
inline ::google::protobuf::int32 Trace::tbin() const {
  // @@protoc_insertion_point(field_get:wctzpb.Trace.tbin)
  return tbin_;
}
inline void Trace::set_tbin(::google::protobuf::int32 value) {
  
  tbin_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Trace.tbin)
}

// optional .wctzpb.FloatArray samples = 3;
inline bool Trace::has_samples() const {
  return !_is_default_instance_ && samples_ != NULL;
}
inline void Trace::clear_samples() {
  if (GetArenaNoVirtual() == NULL && samples_ != NULL) delete samples_;
  samples_ = NULL;
}
inline const ::wctzpb::FloatArray& Trace::samples() const {
  // @@protoc_insertion_point(field_get:wctzpb.Trace.samples)
  return samples_ != NULL ? *samples_ : *default_instance_->samples_;
}
inline ::wctzpb::FloatArray* Trace::mutable_samples() {
  
  if (samples_ == NULL) {
    samples_ = new ::wctzpb::FloatArray;
  }
  // @@protoc_insertion_point(field_mutable:wctzpb.Trace.samples)
  return samples_;
}
inline ::wctzpb::FloatArray* Trace::release_samples() {
  // @@protoc_insertion_point(field_release:wctzpb.Trace.samples)
  
  ::wctzpb::FloatArray* temp = samples_;
  samples_ = NULL;
  return temp;
}
inline void Trace::set_allocated_samples(::wctzpb::FloatArray* samples) {
  delete samples_;
  samples_ = samples;
  if (samples) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:wctzpb.Trace.samples)
}

// -------------------------------------------------------------------

// BinRangeList

// repeated int32 beg = 1;
inline int BinRangeList::beg_size() const {
  return beg_.size();
}
inline void BinRangeList::clear_beg() {
  beg_.Clear();
}
inline ::google::protobuf::int32 BinRangeList::beg(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.BinRangeList.beg)
  return beg_.Get(index);
}
inline void BinRangeList::set_beg(int index, ::google::protobuf::int32 value) {
  beg_.Set(index, value);
  // @@protoc_insertion_point(field_set:wctzpb.BinRangeList.beg)
}
inline void BinRangeList::add_beg(::google::protobuf::int32 value) {
  beg_.Add(value);
  // @@protoc_insertion_point(field_add:wctzpb.BinRangeList.beg)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BinRangeList::beg() const {
  // @@protoc_insertion_point(field_list:wctzpb.BinRangeList.beg)
  return beg_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BinRangeList::mutable_beg() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.BinRangeList.beg)
  return &beg_;
}

// repeated int32 end = 2;
inline int BinRangeList::end_size() const {
  return end_.size();
}
inline void BinRangeList::clear_end() {
  end_.Clear();
}
inline ::google::protobuf::int32 BinRangeList::end(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.BinRangeList.end)
  return end_.Get(index);
}
inline void BinRangeList::set_end(int index, ::google::protobuf::int32 value) {
  end_.Set(index, value);
  // @@protoc_insertion_point(field_set:wctzpb.BinRangeList.end)
}
inline void BinRangeList::add_end(::google::protobuf::int32 value) {
  end_.Add(value);
  // @@protoc_insertion_point(field_add:wctzpb.BinRangeList.end)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BinRangeList::end() const {
  // @@protoc_insertion_point(field_list:wctzpb.BinRangeList.end)
  return end_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BinRangeList::mutable_end() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.BinRangeList.end)
  return &end_;
}

// -------------------------------------------------------------------

// ChannelMasks

// map<int32, .wctzpb.BinRangeList> bin_range_lists = 1;
inline int ChannelMasks::bin_range_lists_size() const {
  return bin_range_lists_.size();
}
inline void ChannelMasks::clear_bin_range_lists() {
  bin_range_lists_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::wctzpb::BinRangeList >&
ChannelMasks::bin_range_lists() const {
  // @@protoc_insertion_point(field_map:wctzpb.ChannelMasks.bin_range_lists)
  return bin_range_lists_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::wctzpb::BinRangeList >*
ChannelMasks::mutable_bin_range_lists() {
  // @@protoc_insertion_point(field_mutable_map:wctzpb.ChannelMasks.bin_range_lists)
  return bin_range_lists_.MutableMap();
}

// -------------------------------------------------------------------

// Frame

// optional int32 ident = 1;
inline void Frame::clear_ident() {
  ident_ = 0;
}
inline ::google::protobuf::int32 Frame::ident() const {
  // @@protoc_insertion_point(field_get:wctzpb.Frame.ident)
  return ident_;
}
inline void Frame::set_ident(::google::protobuf::int32 value) {
  
  ident_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Frame.ident)
}

// optional double time = 2;
inline void Frame::clear_time() {
  time_ = 0;
}
inline double Frame::time() const {
  // @@protoc_insertion_point(field_get:wctzpb.Frame.time)
  return time_;
}
inline void Frame::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Frame.time)
}

// optional double tick = 3;
inline void Frame::clear_tick() {
  tick_ = 0;
}
inline double Frame::tick() const {
  // @@protoc_insertion_point(field_get:wctzpb.Frame.tick)
  return tick_;
}
inline void Frame::set_tick(double value) {
  
  tick_ = value;
  // @@protoc_insertion_point(field_set:wctzpb.Frame.tick)
}

// repeated .wctzpb.Trace traces = 4;
inline int Frame::traces_size() const {
  return traces_.size();
}
inline void Frame::clear_traces() {
  traces_.Clear();
}
inline const ::wctzpb::Trace& Frame::traces(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.Frame.traces)
  return traces_.Get(index);
}
inline ::wctzpb::Trace* Frame::mutable_traces(int index) {
  // @@protoc_insertion_point(field_mutable:wctzpb.Frame.traces)
  return traces_.Mutable(index);
}
inline ::wctzpb::Trace* Frame::add_traces() {
  // @@protoc_insertion_point(field_add:wctzpb.Frame.traces)
  return traces_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::wctzpb::Trace >*
Frame::mutable_traces() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.Frame.traces)
  return &traces_;
}
inline const ::google::protobuf::RepeatedPtrField< ::wctzpb::Trace >&
Frame::traces() const {
  // @@protoc_insertion_point(field_list:wctzpb.Frame.traces)
  return traces_;
}

// repeated string frame_tags = 5;
inline int Frame::frame_tags_size() const {
  return frame_tags_.size();
}
inline void Frame::clear_frame_tags() {
  frame_tags_.Clear();
}
inline const ::std::string& Frame::frame_tags(int index) const {
  // @@protoc_insertion_point(field_get:wctzpb.Frame.frame_tags)
  return frame_tags_.Get(index);
}
inline ::std::string* Frame::mutable_frame_tags(int index) {
  // @@protoc_insertion_point(field_mutable:wctzpb.Frame.frame_tags)
  return frame_tags_.Mutable(index);
}
inline void Frame::set_frame_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:wctzpb.Frame.frame_tags)
  frame_tags_.Mutable(index)->assign(value);
}
inline void Frame::set_frame_tags(int index, const char* value) {
  frame_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:wctzpb.Frame.frame_tags)
}
inline void Frame::set_frame_tags(int index, const char* value, size_t size) {
  frame_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:wctzpb.Frame.frame_tags)
}
inline ::std::string* Frame::add_frame_tags() {
  // @@protoc_insertion_point(field_add_mutable:wctzpb.Frame.frame_tags)
  return frame_tags_.Add();
}
inline void Frame::add_frame_tags(const ::std::string& value) {
  frame_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:wctzpb.Frame.frame_tags)
}
inline void Frame::add_frame_tags(const char* value) {
  frame_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:wctzpb.Frame.frame_tags)
}
inline void Frame::add_frame_tags(const char* value, size_t size) {
  frame_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:wctzpb.Frame.frame_tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Frame::frame_tags() const {
  // @@protoc_insertion_point(field_list:wctzpb.Frame.frame_tags)
  return frame_tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Frame::mutable_frame_tags() {
  // @@protoc_insertion_point(field_mutable_list:wctzpb.Frame.frame_tags)
  return &frame_tags_;
}

// map<string, .wctzpb.IntArray> tagged_traces = 6;
inline int Frame::tagged_traces_size() const {
  return tagged_traces_.size();
}
inline void Frame::clear_tagged_traces() {
  tagged_traces_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::wctzpb::IntArray >&
Frame::tagged_traces() const {
  // @@protoc_insertion_point(field_map:wctzpb.Frame.tagged_traces)
  return tagged_traces_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::wctzpb::IntArray >*
Frame::mutable_tagged_traces() {
  // @@protoc_insertion_point(field_mutable_map:wctzpb.Frame.tagged_traces)
  return tagged_traces_.MutableMap();
}

// map<string, .wctzpb.FloatArray> trace_summaries = 7;
inline int Frame::trace_summaries_size() const {
  return trace_summaries_.size();
}
inline void Frame::clear_trace_summaries() {
  trace_summaries_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::wctzpb::FloatArray >&
Frame::trace_summaries() const {
  // @@protoc_insertion_point(field_map:wctzpb.Frame.trace_summaries)
  return trace_summaries_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::wctzpb::FloatArray >*
Frame::mutable_trace_summaries() {
  // @@protoc_insertion_point(field_mutable_map:wctzpb.Frame.trace_summaries)
  return trace_summaries_.MutableMap();
}

// map<string, .wctzpb.ChannelMasks> channel_masks = 8;
inline int Frame::channel_masks_size() const {
  return channel_masks_.size();
}
inline void Frame::clear_channel_masks() {
  channel_masks_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::wctzpb::ChannelMasks >&
Frame::channel_masks() const {
  // @@protoc_insertion_point(field_map:wctzpb.Frame.channel_masks)
  return channel_masks_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::wctzpb::ChannelMasks >*
Frame::mutable_channel_masks() {
  // @@protoc_insertion_point(field_mutable_map:wctzpb.Frame.channel_masks)
  return channel_masks_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace wctzpb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_src_2fwctzpb_2eproto__INCLUDED
